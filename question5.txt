Q5. List and briefly explain some common Browser APIs available to JavaScript developers.
Answer - JavaScript developers have access to various Browser APIs (Application Programming Interfaces) that provide functionalities to interact with the browser environment. Here are some common Browser APIs along with brief explanations:

1. DOM (Document Object Model) API: The DOM API allows JavaScript to interact with the HTML and XML documents. It provides methods and properties to manipulate document structure, content, and styles dynamically. Developers can access and modify elements, attributes, and text content within a web page.

2. Fetch API: The Fetch API provides an interface for fetching resources (e.g., JSON, text, HTML) asynchronously across the network. It offers a more modern alternative to XMLHttpRequest (XHR) for making HTTP requests and handling responses. The Fetch API supports promises, making it easier to work with asynchronous data.

3. Web Storage API: The Web Storage API provides mechanisms for storing data in the browser's local storage or session storage. It allows developers to store key-value pairs persistently across browser sessions (local storage) or for the duration of a session (session storage). Web Storage is often used for caching data, saving user preferences, or implementing offline functionality.

4. IndexedDB API: IndexedDB is a low-level API for storing large amounts of structured data in the browser. It provides a transactional database system that allows developers to create, read, update, and delete data stored locally. IndexedDB is suitable for applications requiring complex data querying and indexing, such as offline web apps or data-intensive applications.

5. Web Workers API: The Web Workers API enables concurrent execution of JavaScript code in background threads, separate from the main browser thread. Web Workers allow developers to perform CPU-intensive tasks, such as data processing or computations, without blocking the user interface. By offloading work to Web Workers, developers can improve the responsiveness and performance of web applications.

6. Canvas API: The Canvas API provides a drawing surface for rendering graphics, animations, and interactive content dynamically using JavaScript. Developers can draw shapes, paths, text, and images on the canvas element, manipulate pixels directly, and create animations or games. The Canvas API is widely used for creating dynamic visualizations, charts, and multimedia content.

7. Geolocation API: The Geolocation API allows web applications to access the user's geographical location information (latitude and longitude) using the device's GPS or other location sources. It enables developers to build location-aware web apps, such as mapping services, location-based services, or weather applications, by retrieving the user's current position.

8. WebRTC API: The WebRTC (Web Real-Time Communication) API enables peer-to-peer communication between browsers for audio, video, and data sharing without the need for plugins or additional software. It allows developers to implement real-time communication features, such as video conferencing, voice calling, or file sharing, directly within web applications.

These are just a few examples of the many Browser APIs available to JavaScript developers. Each API provides specific functionalities to extend the capabilities of web applications and enhance the user experience. By leveraging Browser APIs, developers can create powerful, interactive, and feature-rich web applications that run seamlessly in modern web browsers.